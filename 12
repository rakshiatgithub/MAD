import 'package:flutter/material.dart'; 
void main() { 

  runApp(QuizApp()); 

} 

class QuizApp extends StatelessWidget { 

  @override 

  Widget build(BuildContext context) { 

    return MaterialApp( 

      title: 'Quiz App', 

      home: QuizPage(), 
      debugShowCheckedModeBanner: false,

    ); 

  } 

} 

 

class Question { 

  final String questionText; 

  final List<String> options; 

  final int correctIndex; 

 

  Question(this.questionText, this.options, this.correctIndex); 

} 

 

class QuizPage extends StatefulWidget { 

  @override 

  _QuizPageState createState() => _QuizPageState(); 

} 

 

class _QuizPageState extends State<QuizPage> { 

  final List<Question> _questions = [ 

    Question("What is the capital of France?", ["London", "Berlin", "Paris", "Rome"], 2), 

    Question("Which planet is known as the Red Planet?", ["Earth", "Mars", "Jupiter", "Saturn"], 1), 

    Question("What is 5 + 3?", ["5", "8", "9", "6"], 1), 

  ]; 

 

  int _currentIndex = 0; 

  int _score = 0; 

 

  void _answerQuestion(int selectedIndex) { 

    if (selectedIndex == _questions[_currentIndex].correctIndex) { 

      _score++; 

    } 

 

    if (_currentIndex < _questions.length - 1) { 

      setState(() { 

        _currentIndex++; 

      }); 

    } else { 

      Navigator.pushReplacement( 

        context, 

        MaterialPageRoute( 

          builder: (context) => ScorePage(score: _score, total: _questions.length), 

        ), 

      ); 

    } 

  } 

 

  @override 

  Widget build(BuildContext context) { 

    var currentQuestion = _questions[_currentIndex]; 

 

    return Scaffold( 

      appBar: AppBar(title: Text('Quiz App')), 

      body: Padding( 

        padding: const EdgeInsets.all(20.0), 

        child: Column( 

          crossAxisAlignment: CrossAxisAlignment.start, 

          children: [ 

            Text( 

              'Question ${_currentIndex + 1}/${_questions.length}', 

              style: TextStyle(fontSize: 22, fontWeight: FontWeight.bold), 

            ), 

            SizedBox(height: 20), 

            Text( 

              currentQuestion.questionText, 

              style: TextStyle(fontSize: 20), 

            ), 

            SizedBox(height: 20), 

            ...currentQuestion.options.asMap().entries.map((entry) { 

              int idx = entry.key; 

              String text = entry.value; 

              return ElevatedButton( 

                onPressed: () => _answerQuestion(idx), 

                child: Text(text), 

              ); 

            }), 

          ], 

        ), 

      ), 

    ); 

  } 

} 

 

class ScorePage extends StatelessWidget { 

  final int score; 

  final int total; 

 

  const ScorePage({required this.score, required this.total}); 

 

  @override 

  Widget build(BuildContext context) { 

    return Scaffold( 

      appBar: AppBar(title: Text('Score Board')), 

      body: Center( 

        child: Column( 

          mainAxisAlignment: MainAxisAlignment.center, 
          

          children: [ 

            Text('Your Score:', style: TextStyle(fontSize: 26)), 

            Text('$score / $total', style: TextStyle(fontSize: 40, fontWeight: FontWeight.bold)), 

            SizedBox(height: 30), 

            ElevatedButton( 

              onPressed: () { 

                Navigator.pushReplacement( 

                  context, 

                  MaterialPageRoute(builder: (context) => QuizPage()), 

                ); 

              }, 

              child: Text('Restart Quiz'), 

            ), 

          ], 

        ), 

      ), 

    ); 

  } 

} 
